
LECS_CharacterSettings = {
	["profileKeys"] = {
		["Attiqus - Bleeding Hollow"] = "Default",
	},
	["profiles"] = {
		["Default"] = {
			["NameplateSettings"] = {
				["nameplateShowEnemies"] = true,
				["nameplateDistance"] = 40,
			},
			["CustomScripts"] = {
				["Guardian"] = "# ShmooDude Feral and Guardian script\n###\n### Options:\n# Interrupt - Suggests use of interuptting abilities, including stuns/knockbacks on non-boss targets.\n#\n#\n# Not in Melee Range - Suggests movement abilities if available or a forward arrow if you're out of range.\n#\n#\n# Multiple-targets rotation - If this is disabled, the AoE icon is removed\n#\n#\n# Ashamane's Frenzy as main action - Puts the Ashamane's Frenzy suggestion in the main action box.\n#       Requires TimeToDie of 20 seconds or more\n#       If this is off, Ovale will suggest 2 CP Regrowths in the Short CD box.\n# Shadowmeld as main action - Puts the Shadowmeld suggestion in the main action box.\n#       Requires TimeToDie of 15 seconds or more\n#       Suggested off except on (raid) bosses.\n# Tiger's Fury multiplier prediction - Applies the Tiger's Fury multiplier if Tiger's Fury is ready.\n#       e.g. If TF is being suggested, any Rip suggestions will assume you use TF first.\n#\n# Prevent capping BrS charges - Will suggest Brutal Slash if you are about to reach max charges.\n#       Advantage: Helps not waste charges.  \n#       Disadvantage: Will probably not have 3 charges when AoE for the encounter shows up.\n# BrS at X targets - Minimum number of targets to suggest using Brutal Slash.\n#       This will use all available Brutal Slash charges.\n#       \n# Only suggest BrS when TF is up\n#       Good for Mythic+ to get the most out of your Brutal Slash charges\n#       Too much haste makes this sub-optimal\n# Try to sync Ashamane's Frenzy with Tiger's Fury\n#       Restricts Ashamane's Frenzy to only if Tiger's Fury is up or has more than 10 seconds remaining on the cooldown\n#       \n# Pooling Value - How high you will pool energy (in seconds to max energy)\n#       Lower will pool more agressively (higher energy)\n#       Adds 7 seconds with chatoyant_signet to whatever value\n# Rip - At how many seconds to overwrite a Rip\n#       Default 8\n#\n# Rake - At how many seconds to overwrite a Rake\n#       Default 7 or\n#               3 with Ailuro Pouncers Legendary, Soul of the Forest Talent, or you are not speced into Bloodtalons\n# Savage Roar - At how many seconds to overwrite Savage Roar\n#       Default 11 or\n#               7.2 without Jagged Wounds talent\n\n\nInclude(ovale_common)\nInclude(ovale_trinkets_mop)\nInclude(ovale_trinkets_wod)\nInclude(ovale_druid_spells)\n\n# Temporary Define until Ovale updated\nDefine(brutal_slash_talent 21)\nDefine(sephuzs_secret 132452)\nDefine(kiljaedens_burning_wish 144259)\n\nAddCheckBox(opt_melee_range L(not_in_melee_range) specialization=feral)\nAddCheckBox(opt_interrupt L(interrupt) default specialization=feral)\nAddCheckBox(opt_use_consumables \"Suggest Potion\" default specialization=feral)\n\nAddCheckBox(opt_ashamanes_frenzy_main_action \"Ashamane's Frenzy as a main action\" default specialization=feral)\nAddCheckBox(opt_shadowmeld_main_action \"Shadowmeld as a main action\" specialization=feral)\n\nAddCheckBox(opt_tigers_fury_multiplier_predict \"Tiger's Fury multiplier prediction\" default specialization=feral)\nAddCheckBox(opt_brutal_slash_use_at_three_always \"Prevent capping BrS charges\" specialization=feral)\nAddCheckBox(opt_brutal_slash_use_with_tigers_fury \"Only suggest BrS when TF is up\" specialization=feral)\nAddCheckBox(opt_sync_af_tf \"Try to sync Ashamane's with TF\" specialization=feral)\n\nAddListItem(opt_10_rake_refresh rake_00_default \"Rake: Default (7; 3 w/ AP, SotF, !BT)\" specialization=feral default)\nAddListItem(opt_10_rake_refresh rake_01_pandemic \"Rake at Pandemic (3; 4.5 w/ !JW)\" specialization=feral)\nAddListItem(opt_10_rake_refresh rake_05 \"Rake at 5 seconds\" specialization=feral)\nAddListItem(opt_10_rake_refresh rake_06 \"Rake at 6 seconds\" specialization=feral)\nAddListItem(opt_10_rake_refresh rake_07 \"Rake at 7 seconds\" specialization=feral)\nAddListItem(opt_10_rake_refresh rake_08 \"Rake at 8 seconds\" specialization=feral)\nAddListItem(opt_10_rake_refresh rake_09 \"Rake at 9 seconds\" specialization=feral)\n\nAddListItem(opt_11_rip_refresh rip_00_default \"Rip: Default (8)\" specialization=feral default)\nAddListItem(opt_11_rip_refresh rip_01_pandemic \"Rip at Pandemic (4.8; 7.2 w/ !JW)\" specialization=feral)\nAddListItem(opt_11_rip_refresh rip_05 \"Rip at 5 seconds\" specialization=feral)\nAddListItem(opt_11_rip_refresh rip_06 \"Rip at 6 seconds\" specialization=feral)\nAddListItem(opt_11_rip_refresh rip_07 \"Rip at 7 seconds\" specialization=feral)\nAddListItem(opt_11_rip_refresh rip_08 \"Rip at 8 seconds\" specialization=feral)\nAddListItem(opt_11_rip_refresh rip_09 \"Rip at 9 seconds\" specialization=feral)\n\nAddListItem(opt_12_savage_roar_refresh savage_roar_00_default \"Savage Roar: Default (11; 7.2 w/ !JW)\" specialization=feral default)\nAddListItem(opt_12_savage_roar_refresh savage_roar_01_pandemic \"Savage Roar Pandemic (7.2)\" specialization=feral)\nAddListItem(opt_12_savage_roar_refresh savage_roar_08 \"Savage Roar at 8 seconds\" specialization=feral)\nAddListItem(opt_12_savage_roar_refresh savage_roar_09 \"Savage Roar at 9 seconds\" specialization=feral)\nAddListItem(opt_12_savage_roar_refresh savage_roar_10 \"Savage Roar at 10 seconds\" specialization=feral)\nAddListItem(opt_12_savage_roar_refresh savage_roar_11 \"Savage Roar at 11 seconds\" specialization=feral)\nAddListItem(opt_12_savage_roar_refresh savage_roar_12 \"Savage Roar at 12 seconds\" specialization=feral)\nAddListItem(opt_12_savage_roar_refresh savage_roar_13 \"Savage Roar at 13 seconds\" specialization=feral)\nAddListItem(opt_12_savage_roar_refresh savage_roar_14 \"Savage Roar at 14 seconds\" specialization=feral)\nAddListItem(opt_12_savage_roar_refresh savage_roar_15 \"Savage Roar at 15 seconds\" specialization=feral)\n\nAddListItem(opt_13_pooling_value pooling_value_00_default \"Pooling: Default (75 energy)\" specialization=feral default)\nAddListItem(opt_13_pooling_value pooling_value_65 \"Pool to 65 energy\" specialization=feral)\nAddListItem(opt_13_pooling_value pooling_value_70 \"Pool to 70 energy\" specialization=feral)\nAddListItem(opt_13_pooling_value pooling_value_75 \"Pool to 75 energy\" specialization=feral)\nAddListItem(opt_13_pooling_value pooling_value_80 \"Pool to 80 energy\" specialization=feral)\nAddListItem(opt_13_pooling_value pooling_value_85 \"Pool to 85 energy\" specialization=feral)\n\nAddListItem(opt_09_desired_targets desired_targets_02 \"BrS at 2 targets\" specialization=feral)\nAddListItem(opt_09_desired_targets desired_targets_03 \"BrS at 3 targets\" specialization=feral default)\nAddListItem(opt_09_desired_targets desired_targets_04 \"BrS at 4 targets\" specialization=feral)\nAddListItem(opt_09_desired_targets desired_targets_05 \"BrS at 5 targets\" specialization=feral)\nAddListItem(opt_09_desired_targets desired_targets_06 \"BrS at 6 targets\" specialization=feral)\nAddListItem(opt_09_desired_targets desired_targets_07 \"BrS at 7 targets\" specialization=feral)\nAddListItem(opt_09_desired_targets desired_targets_08 \"BrS at 8 targets\" specialization=feral)\nAddListItem(opt_09_desired_targets desired_targets_09 \"BrS at 9 targets\" specialization=feral)\n\n\n\n\n########################################\n### Helper Variables (Functions)     ###\n########################################\n\n#variable,name=RakePandemic,value=(15-0.33*15*talent.jagged_wounds.enabled)*0.3\nAddFunction RakePandemic\n{\n    { 15 - 0.33 * 15 * TalentPoints(jagged_wounds_talent) } * 0.3\n}\n#variable,name=RipPandemic,value=(24-0.33*24*talent.jagged_wounds.enabled)*0.3\nAddFunction RipPandemic\n{\n    { 24 - 0.33 * 24 * TalentPoints(jagged_wounds_talent) } * 0.3\n}\n#variable,name=ThrashCatPandemic,value=(15-0.33*15*talent.jagged_wounds.enabled)*0.3\nAddFunction ThrashCatPandemic\n{\n    { 15 - 0.33 * 15 * TalentPoints(jagged_wounds_talent) } * 0.3\n}\n#variable,name=RakeRefresh,value=7\n#variable,name=RakeRefresh,value=variable.RakePandemic,if=equipped.ailuro_pouncers||talent.soul_of_the_forest.enabled||!talent.bloodtalons.enabled\nAddFunction RakeRefresh\n{\n    unless List(opt_10_rake_refresh rake_00_default)\n    {\n        if List(opt_10_rake_refresh rake_01_pandemic) RakePandemic()\n        if List(opt_10_rake_refresh rake_05) 5\n        if List(opt_10_rake_refresh rake_06) 6\n        if List(opt_10_rake_refresh rake_07) 7\n        if List(opt_10_rake_refresh rake_08) 8\n        if List(opt_10_rake_refresh rake_09) 9\n    }\n    if HasEquippedItem(ailuro_pouncers) or not Talent(bloodtalons_talent) RakePandemic()\n    7\n}\n#variable,name=RipRefresh,value=8\nAddFunction RipRefresh\n{\n    unless List(opt_11_rip_refresh rip_00_default)\n    {\n        if List(opt_11_rip_refresh rip_01_pandemic) RipPandemic()\n        if List(opt_11_rip_refresh rip_05) 5\n        if List(opt_11_rip_refresh rip_06) 6\n        if List(opt_11_rip_refresh rip_07) 7\n        if List(opt_11_rip_refresh rip_08) 8\n        if List(opt_11_rip_refresh rip_09) 9\n    }\n    8\n}\n#variable,name=SavageRoarRefresh,value=7.2\n#variable,name=SavageRoarRefresh,value=11,if=talent.jagged_wounds.enabled\nAddFunction SavageRoarRefresh\n{\n    unless List(opt_12_savage_roar_refresh savage_roar_00_default)\n    {\n        if List(opt_12_savage_roar_refresh savage_roar_01_pandemic) RipPandemic()\n        if List(opt_12_savage_roar_refresh savage_roar_08) 8\n        if List(opt_12_savage_roar_refresh savage_roar_09) 9\n        if List(opt_12_savage_roar_refresh savage_roar_10) 10\n        if List(opt_12_savage_roar_refresh savage_roar_11) 11\n        if List(opt_12_savage_roar_refresh savage_roar_12) 12\n        if List(opt_12_savage_roar_refresh savage_roar_13) 13\n        if List(opt_12_savage_roar_refresh savage_roar_14) 14\n        if List(opt_12_savage_roar_refresh savage_roar_15) 15\n    }\n    if Talent(jagged_wounds_talent) 11\n    7.2\n}\n#variable,name=PoolingValue,value=3\n#variable,name=PoolingValue,value=10,if=equipped.chatoyant_signet\nAddFunction PoolingValue\n{\n    unless List(opt_13_pooling_value pooling_value_00_default)\n    {\n        if List(opt_13_pooling_value pooling_value_65) 65\n        if List(opt_13_pooling_value pooling_value_70) 70\n        if List(opt_13_pooling_value pooling_value_75) 75\n        if List(opt_13_pooling_value pooling_value_80) 80\n        if List(opt_13_pooling_value pooling_value_85) 85\n    }\n    75\n}\n#variable,name=ExecuteRange,value=25\n#variable,name=ExecuteRange,value=100,if=talent.sabertooth.enabled\nAddFunction ExecuteRange\n{\n    if Talent(sabertooth_talent) 100\n    25\n}\n#variable,name=BloodtalonsOverwriteStacks,value=2\n#variable,name=BloodtalonsOverwriteStacks,value=1,if=equipped.ailuro_pouncers\nAddFunction BloodtalonsOverwriteStacks\n{\n    if HasEquippedItem(ailuro_pouncers) 1\n    2\n}\n#variable,name=LotsOfEnergy,value=buff.berserk.up||buff.incarnation.up||cooldown.tigers_fury.remains<3||talent.soul_of_the_forest.enabled\nAddFunction LotsOfEnergy\n{\n    BuffPresent(berserk_cat_buff) \n        or BuffPresent(incarnation_king_of_the_jungle_buff) \n        or SpellCooldown(tigers_fury) < 3 \n        or Talent(soul_of_the_forest_talent)\n}\n#variable,name=ClearcastingLotsOfEnergy,value=variable.LotsOfEnergy||buff.clearcasting.react\nAddFunction ClearcastingLotsOfEnergy\n{\n    LotsOfEnergy() \n        or BuffPresent(clearcasting_buff)\n}\n#variable,name=PoolEnergy,value=energy.time_to_max<variable.PoolingValue||variable.LotsOfEnergy\nAddFunction PoolEnergy\n{\n    Energy() > PoolingValue() \n        or LotsOfEnergy()\n}\n#variable,name=ClearcastingPoolEnergy,value=variable.PoolEnergy||buff.clearcasting.react\nAddFunction ClearcastingPoolEnergy\n{\n    PoolEnergy() \n        or BuffPresent(clearcasting_buff)\n}\n#variable,name=FinisherConditions,value=combo_points=5&(variable.PoolEnergy||buff.elunes_guidance.up||cooldown.ashamanes_frenzy.remains<1||!dot.rip.ticking||(dot.rake.remains<1.5&spell_targets.swipe_cat<6)||(spell_targets.brutal_slash>desired_targets&talent.brutal_slash.enabled))\nAddFunction FinisherConditions\n{\n    ComboPoints() == 5 \n        and { PoolEnergy() \n            or BuffPresent(elunes_guidance_buff) \n            or SpellCooldown(ashamanes_frenzy) < 1 \n            or target.DebuffExpires(rip_debuff) \n            or target.DebuffRemaining(rake_debuff) < 1.5 and Enemies() < 6 \n            or Enemies() > Enemies(tagged=1) and Talent(brutal_slash_talent) }\n}\n#variable,name=ThrashCatEnergyPooling,value=!dot.thrash_cat.ticking||variable.ClearcastingPoolEnergy\nAddFunction ThrashCatEnergyPooling\n{\n    target.DebuffExpires(thrash_cat_debuff) \n        or ClearcastingPoolEnergy()\n}\n\n#variable,name=SwipeCatEnergyPooling,value=buff.scent_of_blood.up||variable.ClearcastingPoolEnergy\nAddFunction SwipeCatEnergyPooling\n{\n    BuffPresent(scent_of_blood_buff) \n        or ClearcastingPoolEnergy()\n}\n#variable,name=BuffSavageRoarUp,value=buff.savage_roar.up||!talent.savage_roar.enabled\nAddFunction BuffSavageRoarUp\n{\n    BuffPresent(savage_roar_buff) \n        or not Talent(savage_roar_talent)\n}\n#variable,name=BuffBloodtalonsUp,value=buff.bloodtalons.up||!talent.bloodtalons.enabled\nAddFunction BuffBloodtalonsUp\n{\n    BuffPresent(bloodtalons_buff) or not Talent(bloodtalons_talent)\n}\n#desired_targets\nAddFunction BrutalSlashDesiredTargets asvalue=1\n{\n    if List(opt_09_desired_targets desired_targets_02) 2\n    if List(opt_09_desired_targets desired_targets_03) 3\n    if List(opt_09_desired_targets desired_targets_04) 4\n    if List(opt_09_desired_targets desired_targets_05) 5\n    if List(opt_09_desired_targets desired_targets_06) 6\n    if List(opt_09_desired_targets desired_targets_07) 7\n    if List(opt_09_desired_targets desired_targets_08) 8\n    if List(opt_09_desired_targets desired_targets_09) 9\n}\n#trinket\nAddFunction FeralUseItemActions\n{\n    Item(Trinket0Slot text=13 usable=1)\n    Item(Trinket1Slot text=14 usable=1)\n}\n#potion\nAddFunction FeralPotionActions\n{\n    Item(old_war_potion usable=1)\n    Item(prolonged_power_potion usable=1)\n}\n#melee_range\nAddFunction FeralGetInMeleeRange\n{\n    if CheckBoxOn(opt_melee_range) and target.InRange(shred no)\n    {\n        #wild_charge\n        if target.InRange(wild_charge) Spell(wild_charge)\n        #displacer_beast,if=movement.distance>25\n        if target.distance() > 25 Spell(displacer_beast)\n        #dash,if=movement.distance>25&buff.displacer_beast.down&buff.wild_charge_movement.down\n        if target.distance() > 25 and BuffExpires(displacer_beast_buff) Spell(dash)\n        Texture(misc_arrowlup help=L(not_in_melee_range))\n    }\n}\n#interrupt\nAddFunction FeralInterruptActions\n{\n    if CheckBoxOn(opt_interrupt) and not target.IsFriend() and target.IsInterruptible()\n    {\n        if target.InRange(skull_bash) Spell(skull_bash)\n        if not target.Classification(worldboss)\n        {\n            if target.InRange(mighty_bash) Spell(mighty_bash)\n            if target.distance() < 20 Spell(typhoon)\n            if target.InRange(maim) Spell(maim)\n            if target.distance() < 8 Spell(war_stomp)\n        }\n    }\n}\n#Tiger's Fury multiplier prediction \nAddFunction TFMultPred asvalue=1\n{\n    if CheckBoxOn(opt_tigers_fury_multiplier_predict) \n        and BuffExpires(tigers_fury_buff)\n        and SpellCooldown(tigers_fury) <= 0\n        and { TigersFury_Main() or TigersFury_Sabertooth() } 1.15\n    1\n}\n\n\n########################################\n### Main Action List                 ###\n########################################\n\n#dash,if=!buff.cat_form.up\n#cat_form\n#variable,name=Rake_Prowl,value=buff.prowl.up||buff.shadowmeld.up\n#rake,if=variable.Rake_Prowl\nAddFunction Rake_Prowl\n{\n    BuffPresent(prowl_buff) \n        or BuffPresent(shadowmeld_buff)\n}\n#auto_attack\n#variable,name=Berserk_Main,value=buff.ashamanes_energy.up||(equipped.convergence_of_fates&energy>=35)\n#berserk,if=variable.Berserk_Main\n# MODIFICATION: SpellCooldown(tigers_fury) <= 0 and { TigersFury_Main() or TigersFury_Sabertooth() }\n# REASON: Make Berserk show up if Tiger's Fury conditions are met\nAddFunction Berserk_Main\n{\n    BuffPresent(ashamanes_energy_buff) \n        or HasEquippedItem(convergence_of_fates) and Energy() >= 35\n        or SpellCooldown(tigers_fury) <= 0 \n            and { TigersFury_Main() or TigersFury_Sabertooth() }\n}\n#variable,name=Incarnation_Main,value=buff.ashamanes_energy.up||energy>=35\n#incarnation,if=variable.Incarnation_Main\n# MODIFICATION: SpellCooldown(tigers_fury) <= 0 and { TigersFury_Main() or TigersFury_Sabertooth() }\n# REASON: Make Incarnation show up if Tiger's Fury conditions are met\nAddFunction Incarnation_Main\n{\n    BuffPresent(ashamanes_energy_buff) \n        or Energy() >= 35\n        or SpellCooldown(tigers_fury) <= 0 \n            and { TigersFury_Main() or TigersFury_Sabertooth() }\n}\n#variable,name=Trinket_Main,value=(buff.tigers_fury.up&(target.time_to_die>trinket.stat.any.cooldown||target.time_to_die<45))||buff.incarnation.remains>20\n#use_item,slot=trinket1,if=variable.Trinket_Main\nAddFunction Trinket_Main\n{\n    0 < 1\n}\n#variable,name=Potion_Main,value=((buff.berserk.remains>10||buff.incarnation.remains>20)&(target.time_to_die<180||(trinket.proc.all.react&target.health.pct<25)))||target.time_to_die<=40\n#potion,name=old_war,if=variable.Potion_Main\nAddFunction Potion_Main\n{\n    { BuffRemaining(berserk_cat_buff) > 10 or BuffRemaining(incarnation_king_of_the_jungle_buff) > 20 } \n        and { target.TimeToDie() < 180 or BuffPresent(trinket_proc_any_buff) and target.HealthPercent() < 25 } \n        or target.TimeToDie() <= 40\n}\n#variable,name=TigersFury_Main,value=(!buff.clearcasting.react&energy.deficit>=60)||energy.deficit>=80\n#tigers_fury,if=variable.TigersFury_Main\nAddFunction TigersFury_Main\n{\n    BuffExpires(clearcasting_buff) and EnergyDeficit() >= 60 \n        or EnergyDeficit() >= 80\n        or TimeInCombat() < 8 and BuffPresent(savage_roar_buff) and target.Classification(worldboss)\n}\n# MODIFICATION: Predator TF\n# REASON: Suggest TF anytime its ready if TF is already up to maximize buff uptime.\nAddFunction TigersFury_Predator\n{\n    UnitInRaid() \n        and Talent(predator_talent) \n        and BuffPresent(tigers_fury_buff)\n}\n#variable,name=FerociousBite_3SecondRefresh,value=dot.rip.ticking&dot.rip.remains<3&target.time_to_die>3&target.health.pct<variable.ExecuteRange\n#ferocious_bite,cycle_targets=1,if=variable.FerociousBite_3SecondRefresh\nAddFunction FerociousBite_3SecondRefresh\n{\n    target.DebuffPresent(rip_debuff) \n        and target.DebuffRemaining(rip_debuff) < 3 \n        and target.TimeToDie() > 3 \n        and target.HealthPercent() < ExecuteRange()\n}\n#variable,name=RegrowthConditions,value=talent.bloodtalons.enabled&buff.predatory_swiftness.up&buff.bloodtalons.stack<variable.BloodtalonsOverwriteStacks\n#variable,name=Regrowth_PredatorySwiftness_Expires,value=buff.predatory_swiftness.remains<1.5\n#variable,name=Regrowth_AshamanesFrenzy,value=combo_points=2&buff.bloodtalons.down&cooldown.ashamanes_frenzy.remains<gcd&(buff.savage_roar.remains>(3+gcd)||!talent.savage_roar.enabled)\n#regrowth,if=variable.RegrowthConditions&(variable.Regrowth_PredatorySwiftness_Expires||variable.Regrowth_AshamanesFrenzy)\nAddFunction RegrowthConditions\n{\n    Talent(bloodtalons_talent) \n        and BuffPresent(predatory_swiftness_buff) \n        and BuffStacks(bloodtalons_buff) < BloodtalonsOverwriteStacks()\n}\n\nAddFunction Regrowth_PredatorySwiftness_Expires\n{\n    BuffRemaining(predatory_swiftness_buff) < 1.5\n}\n# MODIFICATION: CheckBoxOn(opt_ashamanes_frenzy_main_action) in Regrowth_AshamanesFrenzy\n# MODIFICATION: Regrowth_AshamanesFrenzy_ShortCd for CheckBoxOff(opt_ashamanes_frenzy_main_action)\n# REASON: Allows player to choose via checkbox whether to add Ashamane's Frenzy to the Main Icon\n# MODIFICATION: target.TimeToDie() > 21\n# REASON: Does not use Regrowth for Ashamane's Frenzy on targets with less than 21 seconds to live\nAddFunction Regrowth_AshamanesFrenzy\n{\n    CheckBoxOn(opt_ashamanes_frenzy_main_action)\n        and ComboPoints() == 2 \n        and BuffExpires(bloodtalons_buff) \n        and SpellCooldown(ashamanes_frenzy) < GCD()\n        and { BuffRemaining(savage_roar_buff) > 3 + GCD() or not Talent(savage_roar_talent) }\n        and target.TimeToDie() > 21\n        and { CheckBoxOff(opt_sync_af_tf) \n            or CheckBoxOn(opt_sync_af_tf)\n                and { BuffRemaining(tigers_fury_buff) > 5 or SpellCooldown(tigers_fury) >= 11 } }\n}\nAddFunction Regrowth_AshamanesFrenzy_ShortCd\n{\n    CheckBoxOff(opt_ashamanes_frenzy_main_action)\n        and ComboPoints() == 2 \n        and BuffExpires(bloodtalons_buff) \n        and SpellCooldown(ashamanes_frenzy) < GCD()\n        and { BuffRemaining(savage_roar_buff) > 3 + GCD() or not Talent(savage_roar_talent) }\n        and target.TimeToDie() > 21\n        and { CheckBoxOff(opt_sync_af_tf) \n            or CheckBoxOn(opt_sync_af_tf)\n                and { BuffRemaining(tigers_fury_buff) > 5 or SpellCooldown(tigers_fury) >= 11 } }\n}\n#variable,name=AshamanesFrenzy_Main,value=combo_points<=2&buff.elunes_guidance.down&variable.BuffBloodtalonsUp&variable.BuffSavageRoarUp\n#ashamanes_frenzy,if=variable.AshamanesFrenzy_Main\n# MODIFICATION: CheckBoxOn(opt_ashamanes_frenzy_main_action) in AshamanesFrenzy_Main\n# MODIFICATION: Regrowth_AshamanesFrenzy_ShortCd for CheckBoxOff(opt_ashamanes_frenzy_main_action)\n# REASON: Allows player to choose via checkbox whether to add Ashamane's Frenzy to the Main Icon\n# MODIFICATION: target.TimeToDie() > 20\n# REASON: Does not use Ashamane's Frenzy on targets with less than 20 seconds to live\nAddFunction AshamanesFrenzy_Main\n{\n    CheckBoxOn(opt_ashamanes_frenzy_main_action)\n        and ComboPoints() <= 2 \n        and BuffExpires(elunes_guidance_buff) \n        and BuffBloodtalonsUp() \n        and BuffSavageRoarUp()\n        and target.TimeToDie() > 20\n        and { CheckBoxOff(opt_sync_af_tf) \n            or CheckBoxOn(opt_sync_af_tf)\n                and { BuffRemaining(tigers_fury_buff) > 4 or SpellCooldown(tigers_fury) >= 10 } }\n}\nAddFunction AshamanesFrenzy_ShortCd\n{\n    CheckBoxOff(opt_ashamanes_frenzy_main_action)\n        and ComboPoints() <= 2 \n        and BuffExpires(elunes_guidance_buff) \n        and BuffBloodtalonsUp() \n        and BuffSavageRoarUp()\n        and target.TimeToDie() > 20\n        and { CheckBoxOff(opt_sync_af_tf) \n            or CheckBoxOn(opt_sync_af_tf)\n                and { BuffRemaining(tigers_fury_buff) > 4 or SpellCooldown(tigers_fury) >= 10 } }\n}\n#call_action_list,name=ElunesGuidance,if=talent.elunes_guidance.enabled\n###\n### ElunesGuidance Action List defined after Main Action List\n###\n#variable,name=Regrowth_SavageRoar_Down,value=variable.RegrowthConditions&talent.savage_roar.enabled&buff.savage_roar.down&combo_points=5\n#regrowth,if=variable.Regrowth_SavageRoar_Down\nAddFunction Regrowth_SavageRoar_Down\n{\n    RegrowthConditions() \n        and Talent(savage_roar_talent) \n        and BuffExpires(savage_roar_buff) \n        and ComboPoints() == 5\n}\n#variable,name=SavageRoar_Down,value=buff.savage_roar.down&(variable.FinisherConditions||time<8)\n#savage_roar,if=variable.SavageRoar_Down\nAddFunction SavageRoar_Down\n{\n    BuffExpires(savage_roar_buff) \n        and { FinisherConditions() or TimeInCombat() < 8 }\n}\n#variable,name=Regrowth_Pouncers,value=equipped.ailuro_pouncers&talent.bloodtalons.enabled&(buff.predatory_swiftness.stack>2||(buff.predatory_swiftness.stack>1&dot.rake.remains<3))&buff.bloodtalons.down\n#regrowth,if=variable.Regrowth_Pouncers\nAddFunction Regrowth_Pouncers\n{\n    HasEquippedItem(ailuro_pouncers) \n        and Talent(bloodtalons_talent) \n        and { BuffStacks(predatory_swiftness_buff) > 2 \n            or BuffStacks(predatory_swiftness_buff) > 1 and target.DebuffRemaining(rake_debuff) < 3 } \n        and BuffExpires(bloodtalons_buff)\n}\n#call_action_list,name=AoeFinishers,if=active_enemies>1\n########################################\n### BEGIN AoeFinishers Action List   ###\n########################################\n#variable,name=SavageRoar_BrutalSlash,value=talent.brutal_slash.enabled&buff.savage_roar.down&spell_targets.brutal_slash>desired_targets&action.brutal_slash.charges>=1\n#savage_roar,if=variable.SavageRoar_BrutalSlash\nAddFunction SavageRoar_BrutalSlash\n{\n    Talent(brutal_slash_talent) \n        and BuffExpires(savage_roar_buff) \n        and Enemies() > Enemies() \n        and Charges(brutal_slash) >= 1\n        and { BuffPresent(tigers_fury_buff) or CheckBoxOff(opt_brutal_slash_use_with_tigers_fury) }\n}\n#variable,name=ThrashCat_5Targets,value=spell_targets.thrash_cat>=5&dot.thrash_cat.remains<=variable.ThrashCatPandemic&variable.ThrashCatEnergyPooling\n#thrash_cat,cycle_targets=1,if=variable.ThrashCat_5Targets\nAddFunction ThrashCat_5Targets\n{\n    Enemies() >= 5 \n        and target.DebuffRemaining(thrash_cat_debuff) <= ThrashCatPandemic() \n        and ThrashCatEnergyPooling()\n}\n#variable,name=SwipeCat_8Targets,value=spell_targets.swipe_cat>=8&variable.SwipeCatEnergyPooling\n#swipe_cat,if=variable.SwipeCat_8Targets\nAddFunction SwipeCat_8Targets\n{\n    Enemies() >= 8 \n        and SwipeCatEnergyPooling()\n}\n########################################\n### END AoeFinishers Action List     ###\n########################################\n#variable,name=Regrowth_5CPs,value=variable.RegrowthConditions&combo_points=5\n#regrowth,if=variable.Regrowth_5CPs\nAddFunction Regrowth_5CPs\n{\n    RegrowthConditions() \n        and ComboPoints() == 5\n}\n########################################\n### BEGIN Finishers Action List      ###\n########################################\n#call_action_list,name=Finishers,if=variable.FinisherConditions\n#variable,name=Maim_3Targets,value=spell_targets.maim>=3&buff.fiery_red_maimers.up&variable.BuffSavageRoarUp&variable.BuffBloodtalonsUp\n#maim,if=variable.Maim_3Targets\nAddFunction Maim_3Targets\n{\n    Enemies() >= 3 \n        and BuffPresent(fiery_red_maimers_buff) \n        and BuffSavageRoarUp() \n        and BuffBloodtalonsUp()\n}\n#variable,name=TigersFury_Sabertooth,value=talent.sabertooth.enabled&time<20&!dot.rip.ticking&combo_points=5\n#tigers_fury,if=variable.TigersFury_Sabertooth\nAddFunction TigersFury_Sabertooth\n{\n    Talent(sabertooth_talent) \n        and TimeInCombat() < 20 \n        and target.DebuffExpires(rip_debuff) \n        and ComboPoints() == 5\n}\n#variable,name=Rip_Main,value=(!dot.rip.ticking||(dot.rip.remains<variable.RipRefresh&target.health.pct>variable.ExecuteRange)||action.rip.persistent_multiplier>dot.rip.pmultiplier)&target.time_to_die-dot.rip.remains>action.rip.tick_time*4\n#rip,cycle_targets=1,if=variable.Rip_Main\n# MODIFICATION: TFMultPred when CheckBoxOn(opt_tigers_fury_multiplier_predict)\n# REASON: When Tiger's Fury is suggested, treat Rip as if it is already up even if it hasn't been cast yet.\nAddFunction Rip_Main\n{\n    { target.DebuffExpires(rip_debuff) \n            or target.DebuffRemaining(rip_debuff) < RipRefresh() and target.HealthPercent() > ExecuteRange() \n            or TFMultPred() * PersistentMultiplier(rip_debuff) > target.DebuffPersistentMultiplier(rip_debuff) } \n        and target.TimeToDie() - target.DebuffRemaining(rip_debuff) > target.TickTime(rip_debuff) * 4\n}\n#variable,name=FerociousBite_9SecondRefresh,value=dot.rip.remains<variable.RipRefresh&target.health.pct<variable.ExecuteRange\n#ferocious_bite,max_energy=1,cycle_targets=1,if=variable.FerociousBite_9SecondRefresh\nAddFunction FerociousBite_9SecondRefresh\n{\n    target.DebuffPresent(rip_debuff) \n        and target.DebuffRemaining(rip_debuff) < RipRefresh() \n        and target.HealthPercent() < ExecuteRange()\n}\n#variable,name=SavageRoar_Main,value=(buff.savage_roar.remains<=7.2||(buff.savage_roar.remains<variable.SavageRoarRefresh&target.health.pct>=variable.ExecuteRange))\n#savage_roar,if=variable.SavageRoar_Main\nAddFunction SavageRoar_Main\n{\n    BuffRemaining(savage_roar_buff) <= 7.2 \n        or BuffRemaining(savage_roar_buff) < SavageRoarRefresh() and target.HealthPercent() >= ExecuteRange()\n}\n#variable,name=Maim_Main,value=buff.fiery_red_maimers.up&variable.BuffSavageRoarUp&variable.BuffBloodtalonsUp\n#maim,if=variable.Maim_Main\nAddFunction Maim_Main\n{\n    BuffPresent(fiery_red_maimers_buff) \n        and BuffSavageRoarUp() \n        and BuffBloodtalonsUp()\n}\n#ferocious_bite,max_energy=1\n#\n# No Function Required\n#\n########################################\n### END Finishers Action List        ###\n########################################\n#call_action_list,name=Generators,if=combo_points<5\n########################################\n### BEGIN Generators Action List     ###\n########################################\n#variable,name=BrutalSlash_Main,value=spell_targets.brutal_slash>desired_targets\n#brutal_slash,if=variable.BrutalSlash_Main\nAddFunction BrutalSlash_Main\n{\n    Enemies() >= BrutalSlashDesiredTargets()\n        and { BuffPresent(tigers_fury_buff) or CheckBoxOff(opt_brutal_slash_use_with_tigers_fury) }\n}\n#variable,name=ThrashCat_Spam,value=talent.brutal_slash.enabled&spell_targets.thrash_cat>=9\n#thrash_cat,if=variable.ThrashCat_Spam\nAddFunction ThrashCat_Spam\n{\n    Talent(brutal_slash_talent) and Enemies() >= 9\n}\n#variable,name=SwipeCat_6Targets,value=spell_targets.swipe_cat>=6&variable.SwipeCatEnergyPooling\n#swipe_cat,if=variable.SwipeCat_6Targets\nAddFunction SwipeCat_6Targets\n{\n    Enemies() >= 6 and SwipeCatEnergyPooling()\n}\n#variable,name=Shadowmeld_Main,value=combo_points<5&energy>=action.rake.cost&dot.rake.pmultiplier<1.9&buff.tigers_fury.up&variable.BuffSavageRoarUp&variable.BuffBloodtalonsUp&(!talent.incarnation.enabled||cooldown.incarnation.remains>18)&!buff.incarnation.up\n#shadowmeld,if=variable.Shadowmeld_Main\n# MODIFICATION: target.TimeToDie() > BaseDuration(rake_debuff) + 5\n# REASON: Does not use Shadowmeld on targets with less than 15/20 seconds to live\n# MODIFICATION: target.InRange(rake)\n# REASON: Cannot move after Shadowmeld so add range check before suggesting\n# MODIFICATION: CheckBoxOn(opt_shadowmeld_main_action) in Shadowmeld_Main\n# MODIFICATION: Shadowmeld_Cd for CheckBoxOff(opt_shadowmeld_main_action)\n# REASON: Allows player to choose via checkbox whether to add Shadowmeld to the Main Icon\n# MODIFICATION: TFMultPred() > 1 in addition to BuffPresent(tigers_fury_buff) for CheckBoxOn(opt_tigers_fury_multiplier_predict)\n# REASON: When Tiger's Fury is suggested, treat Shadowmeld as if it is already up even if it hasn't been cast yet.\nAddFunction Shadowmeld_Main\n{\n    CheckBoxOn(opt_shadowmeld_main_action)\n        and ComboPoints() < 5\n        and Energy() >= PowerCost(rake) \n        and target.DebuffPersistentMultiplier(rake_debuff) < 1.9 \n        and { BuffPresent(tigers_fury_buff) or TFMultPred() > 1 }\n        and BuffSavageRoarUp() \n        and BuffBloodtalonsUp() \n        and { not Talent(incarnation_talent) or SpellCooldown(incarnation_king_of_the_jungle) > 18 } \n        and BuffExpires(incarnation_king_of_the_jungle_buff)\n        and target.TimeToDie() > BaseDuration(rake_debuff) + 5\n        and target.InRange(rake)\n}\nAddFunction Shadowmeld_Cd\n{\n    CheckBoxOff(opt_shadowmeld_main_action) \n        and ComboPoints() < 5\n        and Energy() >= PowerCost(rake) \n        and target.DebuffPersistentMultiplier(rake_debuff) < 1.9 \n        and BuffPresent(tigers_fury_buff) \n        and BuffSavageRoarUp() \n        and BuffBloodtalonsUp() \n        and { not Talent(incarnation_talent) or SpellCooldown(incarnation_king_of_the_jungle) > 18 } \n        and BuffExpires(incarnation_king_of_the_jungle_buff)\n        and target.TimeToDie() > BaseDuration(rake_debuff) + 5\n        and target.InRange(rake)\n}\n#variable,name=Rake_Main,value=(!dot.rake.ticking||(variable.BuffBloodtalonsUp&dot.rake.remains<=variable.RakeRefresh&action.rake.persistent_multiplier>dot.rake.pmultiplier*0.80))&target.time_to_die-dot.rake.remains>action.rake.tick_time\n#rake,cycle_targets=1,if=variable.Rake_Main\n# MODIFICATION: TFMultPred when CheckBoxOn(opt_tigers_fury_multiplier_predict)\n# REASON: When Tiger's Fury is suggested, treat Rip as if it is already up even if it hasn't been cast yet.\nAddFunction Rake_Main\n{\n    { target.DebuffExpires(rake_debuff) \n            or BuffBloodtalonsUp() and target.DebuffRemaining(rake_debuff) <= RakeRefresh() and TFMultPred() * PersistentMultiplier(rake_debuff) > target.DebuffPersistentMultiplier(rake_debuff) * 0.8 } \n        and target.TimeToDie() - target.DebuffRemaining(rake_debuff) > target.TickTime(rake_debuff)\n}\n#variable,name=MoonfireCat_Main,value=dot.moonfire_cat.remains<=4.2&target.time_to_die-dot.moonfire_cat.remains>action.moonfire_cat.tick_time*2\n#moonfire_cat,cycle_targets=1,if=variable.MoonfireCat_Main\nAddFunction MoonfireCat_Main\n{\n    target.DebuffRemaining(moonfire_cat_debuff) <= 4.2 \n        and target.TimeToDie() - target.DebuffRemaining(moonfire_cat_debuff) > target.TickTime(moonfire_cat_debuff) * 2\n}\n#variable,name=ThrashCat_Tier19_4pc,value=set_bonus.tier19_4pc&dot.thrash_cat.remains<=variable.ThrashCatPandemic&((buff.clearcasting.react&buff.bloodtalons.down)||(variable.ClearcastingLotsOfEnergy&equipped.luffa_wrappings))\n#thrash_cat,cycle_targets=1,if=variable.ThrashCat_Tier19_4pc\nAddFunction ThrashCat_Tier19_4pc\n{\n    ArmorSetBonus(T19 4) \n        and target.DebuffRemaining(thrash_cat_debuff) <= ThrashCatPandemic() \n        and { BuffPresent(clearcasting_buff) and { HasEquippedItem(ailuro_pouncers) or BuffExpires(bloodtalons_buff) } \n            or ClearcastingLotsOfEnergy() and HasEquippedItem(luffa_wrappings) }\n}\n#variable,name=ThrashCat_NoTier19_4pc,value=!set_bonus.tier19_4pc&dot.thrash_cat.remains<=variable.ThrashCatPandemic&(buff.clearcasting.react&equipped.luffa_wrappings&(equipped.ailuro_pouncers||buff.bloodtalons.down))\n#thrash_cat,cycle_targets=1,if=variable.ThrashCat_NoTier19_4pc\nAddFunction ThrashCat_NoTier19_4pc\n{\n    not ArmorSetBonus(T19 4) \n        and target.DebuffRemaining(thrash_cat_debuff) <= ThrashCatPandemic() \n        and BuffPresent(clearcasting_buff) \n        and HasEquippedItem(luffa_wrappings) \n        and { HasEquippedItem(ailuro_pouncers) or BuffExpires(bloodtalons_buff) }\n}\n#variable,name=ThrashCat_2Targets,value=dot.thrash_cat.remains<=variable.ThrashCatPandemic&spell_targets.thrash_cat>=2&variable.ThrashCatEnergyPooling\n#thrash_cat,cycle_targets=1,if=variable.ThrashCat_2Targets\nAddFunction ThrashCat_2Targets\n{\n    target.DebuffRemaining(thrash_cat_debuff) <= ThrashCatPandemic() \n        and Enemies() >= 2 \n        and ThrashCatEnergyPooling()\n}\n#variable,name=BrutalSlash_3Charges,value=charges_fractional>2.66\n#brutal_slash,if=variable.BrutalSlash_3Charges\n# MODIFICATION: CheckBoxOn(opt_brutal_slash_use_at_three_always)\n# REASON: Allows a player to pool to full charges\nAddFunction BrutalSlash_3Charges\n{\n    CheckBoxOn(opt_brutal_slash_use_at_three_always)\n        and Charges(brutal_slash count=0) > 2.66 \n}\n#variable,name=SwipeCat_Main,value=spell_targets.swipe_cat>=3&variable.SwipeCatEnergyPooling\n#swipe_cat,if=variable.SwipeCat_Main\nAddFunction SwipeCat_Main\n{\n    Enemies() >= 3 and SwipeCatEnergyPooling()\n}\n#variable,name=Shred_Main,value=(spell_targets.swipe_cat<3||talent.brutal_slash.enabled)&((dot.rake.remains>(action.shred.cost+action.rake.cost-energy)%energy.regen&combo_points<3)||variable.ClearcastingPoolEnergy)\n#shred,if=variable.Shred_Main\nAddFunction Shred_Main\n{\n    { Enemies() < 3 or Talent(brutal_slash_talent) } \n        and { target.DebuffRemaining(rake_debuff) > { PowerCost(shred) + PowerCost(rake) - Energy() } / EnergyRegenRate() and ComboPoints() < 3 \n            or ClearcastingPoolEnergy() }\n}\n########################################\n### END Generators Action List       ###\n########################################\n########################################\n### END Main Action List             ###\n########################################\n\n\n\n########################################\n### BEGIN ElunesGuidance Action List ###\n########################################\n#variable,name=ElunesGuidance_Regrowth,value=talent.elunes_guidance.enabled&variable.RegrowthConditions&((cooldown.elunes_guidance.remains<gcd&combo_points=0)||(buff.elunes_guidance.up&combo_points>=4))\n#regrowth,if=variable.ElunesGuidance_Regrowth\n# MODIFICATION: Split into main and short cd action lists\n# REASON: Regrowth for EG should be in cooldown box similar to Ashamane's Frenzy\nAddFunction ElunesGuidance_Regrowth_Main\n{\n    Talent(elunes_guidance_talent) \n        and RegrowthConditions() \n        and BuffPresent(elunes_guidance_buff) and ComboPoints() >= 4\n}\nAddFunction ElunesGuidance_Regrowth_ShortCd\n{\n    Talent(elunes_guidance_talent) \n        and RegrowthConditions() \n        and SpellCooldown(elunes_guidance) < GCD() and ComboPoints() == 0 \n}\n#variable,name=ElunesGuidance_Pooling,value=talent.elunes_guidance.enabled&combo_points=0&energy<action.ferocious_bite.cost+25-energy.regen*cooldown.elunes_guidance.remains\n#pool_resource,if=variable.ElunesGuidance_Pooling\n# MODIFICATION: PowerCost(ferocious_bite) + 25 to EnergyCost(ferocious_bite max=1)\n# REASON: Ovale Calculates this automatically\nAddFunction ElunesGuidance_Pooling\n{\n    Talent(elunes_guidance_talent) \n        and ComboPoints() == 0 \n        and Energy() < EnergyCost(ferocious_bite max=1) - EnergyRegenRate() * SpellCooldown(elunes_guidance)\n}\n#variable,name=ElunesGuidance_Main,value=talent.elunes_guidance.enabled&combo_points=0&energy>=action.ferocious_bite.cost+25\n#elunes_guidance,if=variable.ElunesGuidance_Main\n# MODIFICATION: PowerCost(ferocious_bite) + 25 to EnergyCost(ferocious_bite max=1)\n# REASON: Ovale Calculates this automatically\nAddFunction ElunesGuidance_Main\n{\n    Talent(elunes_guidance_talent) \n        and ComboPoints() == 0 \n        and Energy() >= EnergyCost(ferocious_bite max=1)\n}\n########################################\n### END ElunesGuidance Action List   ###\n########################################\n\n### actions.AoeFinishers\n\nAddFunction FeralAoeFinishersMainActions\n{\n    #variable,name=SavageRoar_BrutalSlash,value=talent.brutal_slash.enabled&buff.savage_roar.down&spell_targets.brutal_slash>desired_targets&action.brutal_slash.charges>=1\n    #pool_resource,for_next=1\n    #savage_roar,if=variable.SavageRoar_BrutalSlash\n    if SavageRoar_BrutalSlash() Spell(savage_roar)\n    unless SavageRoar_BrutalSlash() and SpellUsable(savage_roar) and SpellCooldown(savage_roar) < TimeToEnergyFor(savage_roar)\n    {\n        #variable,name=ThrashCat_5Targets,value=spell_targets.thrash_cat>=5&dot.thrash_cat.remains<=variable.ThrashCatPandemic&variable.ThrashCatEnergyPooling\n        #pool_resource,for_next=1\n        #thrash_cat,cycle_targets=1,if=variable.ThrashCat_5Targets\n        if ThrashCat_5Targets() Spell(thrash_cat)\n        unless ThrashCat_5Targets() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat)\n        {\n            #variable,name=SwipeCat_8Targets,value=spell_targets.swipe_cat>=8&variable.SwipeCatEnergyPooling\n            #pool_resource,for_next=1\n            #swipe_cat,if=variable.SwipeCat_8Targets\n            if SwipeCat_8Targets() Spell(swipe_cat)\n        }\n    }\n}\n\nAddFunction FeralAoeFinishersMainPostConditions\n{\n}\n\n### actions.Finishers\n\nAddFunction FeralFinishersMainActions\n{\n    #variable,name=Maim_3Targets,value=spell_targets.maim>=3&buff.fiery_red_maimers.up&variable.BuffBloodtalonsUp\n    #pool_resource,for_next=1\n    #maim,if=variable.Maim_3Targets\n    if Maim_3Targets() Spell(maim)\n    unless Maim_3Targets() and SpellUsable(maim) and SpellCooldown(maim) < TimeToEnergyFor(maim)\n    {\n        #variable,name=Rip_Main,value=(!dot.rip.ticking||(dot.rip.remains<variable.RipRefresh&target.health.pct>variable.ExecuteRange)||action.rip.persistent_multiplier>dot.rip.pmultiplier)&target.time_to_die-dot.rip.remains>action.rip.tick_time*4\n        #pool_resource,for_next=1\n        #rip,cycle_targets=1,if=variable.Rip_Main\n        if Rip_Main() Spell(rip)\n        unless Rip_Main() and SpellUsable(rip) and SpellCooldown(rip) < TimeToEnergyFor(rip)\n        {\n            #variable,name=FerociousBite_9SecondRefresh,value=dot.rip.ticking&dot.rip.remains<variable.RipRefresh&target.health.pct<variable.ExecuteRange\n            #pool_resource,for_next=1\n            #ferocious_bite,max_energy=1,cycle_targets=1,if=variable.FerociousBite_9SecondRefresh\n            if Energy() >= EnergyCost(ferocious_bite max=1) and FerociousBite_9SecondRefresh() Spell(ferocious_bite text=Refresh)\n            unless Energy() >= EnergyCost(ferocious_bite max=1) and FerociousBite_9SecondRefresh() and SpellUsable(ferocious_bite) and SpellCooldown(ferocious_bite) < TimeToEnergyFor(ferocious_bite)\n            {\n                #variable,name=SavageRoar_Main,value=(buff.savage_roar.remains<=7.2||(buff.savage_roar.remains<variable.SavageRoarRefresh&target.health.pct>=variable.ExecuteRange))\n                #pool_resource,for_next=1\n                #savage_roar,if=variable.SavageRoar_Main\n                if SavageRoar_Main() Spell(savage_roar)\n                unless SavageRoar_Main() and SpellUsable(savage_roar) and SpellCooldown(savage_roar) < TimeToEnergyFor(savage_roar)\n                {\n                    #variable,name=Maim_Main,value=buff.fiery_red_maimers.up&variable.BuffBloodtalonsUp\n                    #pool_resource,for_next=1\n                    #maim,if=variable.Maim_Main\n                    if Maim_Main() Spell(maim)\n                    unless Maim_Main() and SpellUsable(maim) and SpellCooldown(maim) < TimeToEnergyFor(maim)\n                    {\n                        #pool_resource,for_next=1\n                        #ferocious_bite,max_energy=1\n                        if Energy() >= EnergyCost(ferocious_bite max=1) Spell(ferocious_bite)\n                    }\n                }\n            }\n        }\n    }\n}\n\nAddFunction FeralFinishersMainPostConditions\n{\n}\n\n### actions.Generators\n\nAddFunction FeralGeneratorsMainActions\n{\n    #variable,name=BrutalSlash_Main,value=spell_targets.brutal_slash>desired_targets\n    #brutal_slash,if=variable.BrutalSlash_Main\n    if BrutalSlash_Main() Spell(brutal_slash)\n    #variable,name=ThrashCat_Spam,value=talent.brutal_slash.enabled&spell_targets.thrash_cat>=9\n    #pool_resource,for_next=1\n    #thrash_cat,if=variable.ThrashCat_Spam\n    if ThrashCat_Spam() Spell(thrash_cat)\n    unless ThrashCat_Spam() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat)\n    {\n        #variable,name=SwipeCat_6Targets,value=spell_targets.swipe_cat>=6&variable.SwipeCatEnergyPooling\n        #pool_resource,for_next=1\n        #swipe_cat,if=variable.SwipeCat_6Targets\n        if SwipeCat_6Targets() Spell(swipe_cat)\n        unless SwipeCat_6Targets() and SpellUsable(swipe_cat) and SpellCooldown(swipe_cat) < TimeToEnergyFor(swipe_cat)\n        {\n            #variable,name=Rake_Main,value=(!dot.rake.ticking||(variable.BuffBloodtalonsUp&dot.rake.remains<=variable.RakeRefresh&action.rake.persistent_multiplier>dot.rake.pmultiplier*0.80))&target.time_to_die-dot.rake.remains>action.rake.tick_time\n            #pool_resource,for_next=1\n            #rake,cycle_targets=1,if=variable.Rake_Main\n            if Rake_Main() Spell(rake)\n            unless Rake_Main() and SpellUsable(rake) and SpellCooldown(rake) < TimeToEnergyFor(rake)\n            {\n                #variable,name=MoonfireCat_Main,value=dot.moonfire_cat.remains<=4.2&target.time_to_die-dot.moonfire_cat.remains>action.moonfire_cat.tick_time*2\n                #moonfire_cat,cycle_targets=1,if=variable.MoonfireCat_Main\n                if MoonfireCat_Main() Spell(moonfire_cat)\n                #variable,name=ThrashCat_Tier19_4pc,value=set_bonus.tier19_4pc&dot.thrash_cat.remains<=variable.ThrashCatPandemic&((buff.clearcasting.react&(equipped.ailuro_pouncers||buff.bloodtalons.down))||(variable.ClearcastingLotsOfEnergy&equipped.luffa_wrappings))\n                #thrash_cat,cycle_targets=1,if=variable.ThrashCat_Tier19_4pc\n                if ThrashCat_Tier19_4pc() Spell(thrash_cat)\n                #variable,name=ThrashCat_NoTier19_4pc,value=!set_bonus.tier19_4pc&dot.thrash_cat.remains<=variable.ThrashCatPandemic&(buff.clearcasting.react&equipped.luffa_wrappings&(equipped.ailuro_pouncers||buff.bloodtalons.down))\n                #thrash_cat,cycle_targets=1,if=variable.ThrashCat_NoTier19_4pc\n                if ThrashCat_NoTier19_4pc() Spell(thrash_cat)\n                #variable,name=ThrashCat_2Targets,value=dot.thrash_cat.remains<=variable.ThrashCatPandemic&spell_targets.thrash_cat>=2&variable.ThrashCatEnergyPooling\n                #pool_resource,for_next=1\n                #thrash_cat,cycle_targets=1,if=variable.ThrashCat_2Targets\n                if ThrashCat_2Targets() Spell(thrash_cat)\n                unless ThrashCat_2Targets() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat)\n                {\n                    #variable,name=SwipeCat_Main,value=spell_targets.swipe_cat>=3&variable.SwipeCatEnergyPooling\n                    #swipe_cat,if=variable.SwipeCat_Main\n                    if SwipeCat_Main() Spell(swipe_cat)\n                    #variable,name=BrutalSlash_3Charges,value=action.brutal_slash.charges_fractional>2.66&time>10\n                    #brutal_slash,if=variable.BrutalSlash_3Charges\n                    if BrutalSlash_3Charges() Spell(brutal_slash)\n                    #variable,name=Shred_Main,value=(spell_targets.swipe_cat<3||talent.brutal_slash.enabled)&((dot.rake.remains>(action.shred.cost+action.rake.cost-energy)%energy.regen&combo_points<3)||variable.ClearcastingPoolEnergy)\n                    #shred,if=variable.Shred_Main\n                    if Shred_Main() Spell(shred)\n                }\n            }\n        }\n    }\n}\n\n### actions.default\n\nAddFunction FeralDefaultMainActions\n{\n    # MODIFICATION: Dash to get to cat form moved from Cd to Main\n    # REASON: So it doesn't show up out of combat and to remind you to use dash to regain Cat Form when an option\n    #dash,if=!buff.cat_form.up\n    if BuffExpires(cat_form_buff) Spell(dash)\n    \n    #cat_form\n    Spell(cat_form)\n\n    #variable,name=Rake_Prowl,value=buff.prowl.up||buff.shadowmeld.up\n    #rake,if=variable.Rake_Prowl\n    if Rake_Prowl() Spell(rake)\n    #variable,name=FerociousBite_3SecondRefresh,value=dot.rip.ticking&dot.rip.remains<3&target.time_to_die>3&target.health.pct<variable.ExecuteRange\n    #ferocious_bite,cycle_targets=1,if=variable.FerociousBite_3SecondRefresh\n    if FerociousBite_3SecondRefresh() Spell(ferocious_bite text=Refresh)\n    #variable,name=RegrowthConditions,value=talent.bloodtalons.enabled&buff.predatory_swiftness.up&buff.bloodtalons.stack<variable.BloodtalonsOverwriteStacks\n    #variable,name=Regrowth_PredatorySwiftness_Expires,value=buff.predatory_swiftness.remains<1.5\n    #variable,name=Regrowth_AshamanesFrenzy,value=combo_points=2&buff.bloodtalons.down&cooldown.ashamanes_frenzy.remains<1+gcd&(buff.savage_roar.remains>(3+gcd)||!talent.savage_roar.enabled)\n    #regrowth,if=variable.RegrowthConditions&(variable.Regrowth_PredatorySwiftness_Expires||variable.Regrowth_AshamanesFrenzy)\n    if RegrowthConditions() and { Regrowth_PredatorySwiftness_Expires() or Regrowth_AshamanesFrenzy() } Spell(regrowth)\n    #variable,name=AshamanesFrenzy_Main,value=combo_points<=2&buff.elunes_guidance.down&variable.BuffBloodtalonsUp&variable.BuffSavageRoarUp\n    #ashamanes_frenzy,if=variable.AshamanesFrenzy_Main\n    # MODIFICATION: AshamanesFrenzy_Main for CheckBoxOn(opt_ashamanes_frenzy_main_action)\n    # REASON: Allows player to choose via checkbox whether to add Azshamane's Frenzy to the Main Icon\n    if AshamanesFrenzy_Main() Spell(ashamanes_frenzy)\n    #variable,name=Shadowmeld_Main,value=combo_points<5&energy>=action.rake.cost&dot.rake.pmultiplier<1.9&buff.tigers_fury.up&variable.BuffSavageRoarUp&variable.BuffBloodtalonsUp&(!talent.incarnation.enabled||cooldown.incarnation.remains>18)&!buff.incarnation.up\n    #shadowmeld,if=variable.Shadowmeld_Main\n    # MODIFICATION: Shadowmeld_Cd for CheckBoxOff(opt_shadowmeld_main_action)\n    # REASON: Allows player to choose via checkbox whether to add Shadowmeld to the Main Icon\n    if Shadowmeld_Main() Spell(shadowmeld)\n    #call_action_list,name=ElunesGuidance,if=talent.elunes_guidance.enabled\n    if Talent(elunes_guidance_talent) FeralElunesGuidanceMainActions()\n\n    unless Talent(elunes_guidance_talent) and FeralElunesGuidanceMainPostConditions()\n    {\n        #variable,name=Regrowth_SavageRoar_Down,value=variable.RegrowthConditions&talent.savage_roar.enabled&buff.savage_roar.down&combo_points=5\n        #regrowth,if=variable.Regrowth_SavageRoar_Down\n        if Regrowth_SavageRoar_Down() Spell(regrowth)\n        #variable,name=SavageRoar_Down,value=buff.savage_roar.down&(variable.FinisherConditions||time<8)\n        #pool_resource,for_next=1\n        #savage_roar,if=variable.SavageRoar_Down\n        if SavageRoar_Down() Spell(savage_roar)\n        unless SavageRoar_Down() and SpellUsable(savage_roar) and SpellCooldown(savage_roar) < TimeToEnergyFor(savage_roar)\n        {\n            #variable,name=Regrowth_Pouncers,value=equipped.ailuro_pouncers&talent.bloodtalons.enabled&(buff.predatory_swiftness.stack>2||(buff.predatory_swiftness.stack>1&dot.rake.remains<3))&buff.bloodtalons.down\n            #regrowth,if=variable.Regrowth_Pouncers\n            if Regrowth_Pouncers() Spell(regrowth)\n            #call_action_list,name=AoeFinishers,if=active_enemies>1\n            if Enemies() > 1 FeralAoeFinishersMainActions()\n\n            unless Enemies() > 1 and FeralAoeFinishersMainPostConditions()\n            {\n                #variable,name=Regrowth_5CPs,value=variable.RegrowthConditions&combo_points=5\n                #regrowth,if=variable.Regrowth_5CPs\n                if Regrowth_5CPs() Spell(regrowth)\n                #call_action_list,name=Finishers,if=variable.FinisherConditions&variable.BuffSavageRoarUp\n                if FinisherConditions() and BuffSavageRoarUp() FeralFinishersMainActions()\n                unless FinisherConditions() and BuffSavageRoarUp() and FeralFinishersMainPostConditions()\n                {\n                    #call_action_list,name=Generators,if=combo_points<5\n                    if ComboPoints() < 5 FeralGeneratorsMainActions()\n                }\n            }\n        }\n    }\n}\n\n\nAddFunction FeralDefaultShortCdActions\n{\n    unless Spell(cat_form)\n    {\n        #wild_charge\n        FeralGetInMeleeRange()\n\n        unless Rake_Prowl() and Spell(rake)\n        {\n            #auto_attack\n            #variable,name=TigersFury_Main,value=(!buff.clearcasting.react&energy.deficit>=60)||energy.deficit>=80\n            #tigers_fury,if=variable.TigersFury_Main\n            if TigersFury_Main() Spell(tigers_fury)\n            #tigers_fury,if=variable.TigersFury_Sabertooth\n            if TigersFury_Sabertooth() Spell(tigers_fury)\n\n            unless FerociousBite_3SecondRefresh() and Spell(ferocious_bite) or RegrowthConditions() and { Regrowth_PredatorySwiftness_Expires() or Regrowth_AshamanesFrenzy() } and Spell(regrowth)\n            {\n                #variable,name=Regrowth_AshamanesFrenzy,value=combo_points=2&buff.bloodtalons.down&cooldown.ashamanes_frenzy.remains<1+gcd&(buff.savage_roar.remains>(3+gcd)||!talent.savage_roar.enabled)\n                #regrowth,if=variable.RegrowthConditions&(variable.Regrowth_PredatorySwiftness_Expires||variable.Regrowth_AshamanesFrenzy)\n                # MODIFICATION: Regrowth_AshamanesFrenzy_ShortCd for CheckBoxOff(opt_ashamanes_frenzy_main_action)\n                # REASON: Allows player to choose via checkbox whether to add Ashamane's Frenzy to the Main Icon\n                if RegrowthConditions() and Regrowth_AshamanesFrenzy_ShortCd() Spell(regrowth text=AF)\n                #variable,name=AshamanesFrenzy_Main,value=combo_points<=2&buff.elunes_guidance.down&variable.BuffBloodtalonsUp&variable.BuffSavageRoarUp\n                #ashamanes_frenzy,if=variable.AshamanesFrenzy_Main\n                # MODIFICATION: AshamanesFrenzy_ShortCd for CheckBoxOff(opt_ashamanes_frenzy_main_action)\n                # REASON: Allows player to choose via checkbox whether to add Ashamane's Frenzy to the Main Icon\n                if AshamanesFrenzy_ShortCd() Spell(ashamanes_frenzy)\n                # MODIFICATION: TigersFury_Predator\n                # REASON: Spam Tiger's Fury with predator in raid to maximize raid uptime of versatility buff\n                if TigersFury_Predator() Spell(tigers_fury text=Pred)\n                #call_action_list,name=ElunesGuidance,if=talent.elunes_guidance.enabled\n                if Talent(elunes_guidance_talent) FeralElunesGuidanceShortCdActions()\n            }\n        }\n    }\n}\n\nAddFunction FeralDefaultCdActions\n{\n\n    unless Spell(cat_form)\n    {\n        #skull_bash\n        FeralInterruptActions()\n\n        #variable,name=Berserk_Main,value=buff.ashamanes_energy.up||(equipped.convergence_of_fates&energy>=35)\n        #berserk,if=variable.Berserk_Main\n        if Berserk_Main() Spell(berserk_cat)\n        #variable,name=Incarnation_Main,value=buff.ashamanes_energy.up||energy>=35\n        #incarnation,if=variable.Incarnation_Main\n        if Incarnation_Main() Spell(incarnation_king_of_the_jungle)\n        #variable,name=Trinket_Main,value=(buff.tigers_fury.up&(target.time_to_die>trinket.stat.any.cooldown||target.time_to_die<45))||buff.incarnation.remains>20\n        #use_item,slot=trinket1,if=variable.Trinket_Main\n        if Trinket_Main() FeralUseItemActions()\n        #variable,name=Potion_Main,value=((buff.berserk.remains>10||buff.incarnation.remains>20)&(target.time_to_die<180||(trinket.proc.all.react&target.health.pct<25)))||target.time_to_die<=40\n        #potion,name=old_war,if=variable.Potion_Main\n        if Potion_Main() and CheckBoxOn(opt_use_consumables) and target.Classification(worldboss) FeralPotionActions()\n\n        unless FerociousBite_3SecondRefresh() and Spell(ferocious_bite) or RegrowthConditions() and { Regrowth_PredatorySwiftness_Expires() or Regrowth_AshamanesFrenzy() } and Spell(regrowth) or AshamanesFrenzy_Main() and Spell(ashamanes_frenzy)\n        {\n            #variable,name=Shadowmeld_Main,value=combo_points<5&energy>=action.rake.cost&dot.rake.pmultiplier<1.9&buff.tigers_fury.up&variable.BuffSavageRoarUp&variable.BuffBloodtalonsUp&(!talent.incarnation.enabled||cooldown.incarnation.remains>18)&!buff.incarnation.up\n            #shadowmeld,if=variable.Shadowmeld_Main\n            # MODIFICATION: Shadowmeld_Cd for CheckBoxOff(opt_shadowmeld_main_action)\n            # REASON: Allows player to choose via checkbox whether to add Shadowmeld to the Main Icon\n            if Shadowmeld_Cd() Spell(shadowmeld)\n        }\n    }\n}\n\n### actions.ElunesGuidance\n\nAddFunction FeralElunesGuidanceMainActions\n{\n    #variable,name=ElunesGuidance_Regrowth,value=talent.elunes_guidance.enabled&variable.RegrowthConditions&((cooldown.elunes_guidance.remains<gcd&combo_points=0)||(buff.elunes_guidance.up&combo_points>=4))\n    #regrowth,if=variable.ElunesGuidance_Regrowth\n    # MODIFICATION: ElunesGuidance_Regrowth_Main\n    # REASON: Only do 4 CP regrowth in main action list\n    if ElunesGuidance_Regrowth_Main() Spell(regrowth)\n}\n\nAddFunction FeralElunesGuidanceMainPostConditions\n{\n}\n\nAddFunction FeralElunesGuidanceShortCdActions\n{\n    #variable,name=ElunesGuidance_Regrowth,value=talent.elunes_guidance.enabled&variable.RegrowthConditions&((cooldown.elunes_guidance.remains<gcd&combo_points=0)||(buff.elunes_guidance.up&combo_points>=4))\n    #regrowth,if=variable.ElunesGuidance_Regrowth\n    # MODIFICATION: ElunesGuidance_Regrowth_Main\n    # REASON: Only do 4 CP regrowth in main action list\n    if ElunesGuidance_Regrowth_ShortCd() Spell(regrowth text=EG)\n    \n    #variable,name=ElunesGuidance_Pooling,value=talent.elunes_guidance.enabled&combo_points=0&energy<action.ferocious_bite.cost+25-energy.regen*cooldown.elunes_guidance.remains\n    #pool_resource,if=variable.ElunesGuidance_Pooling\n    unless ElunesGuidance_Pooling()\n    {\n\n        #variable,name=ElunesGuidance_Main,value=talent.elunes_guidance.enabled&combo_points=0&energy>=action.ferocious_bite.cost+25\n        #elunes_guidance,if=variable.ElunesGuidance_Main\n        if ElunesGuidance_Main() Spell(elunes_guidance)\n\n    }\n}\n\n\n### actions.precombat\n\nAddFunction FeralPrecombatMainActions\n{\n    #flask,type=flask_of_the_seventh_demon\n    #food,type=nightborne_delicacy_platter\n    #augmentation,type=defiled\n    #regrowth,if=talent.bloodtalons.enabled\n    # MODIFICATION: Talent(bloodtalons_talent) to Talent(bloodtalons_talent) and BuffRemaining(bloodtalons_buff) < 15 and BuffExpires(prowl_buff)\n    # REASON: Only suggest Regrowth out of stealth and if there's <15 seconds remaining\n    if Talent(bloodtalons_talent) and BuffRemaining(bloodtalons_buff) < 15 and BuffExpires(prowl_buff) Spell(regrowth)\n    #cat_form\n    Spell(cat_form)\n    #savage_roar\n    if BuffRemaining(savage_roar_buff) < 4 + 4 * ComboPoints() Spell(savage_roar)\n}\n\nAddFunction FeralPrecombatMainPostConditions\n{\n}\n\nAddFunction FeralPrecombatShortCdActions\n{\n    # MODIFICATION: Talent(bloodtalons_talent) to Talent(bloodtalons_talent) and BuffRemaining(bloodtalons_buff) < 15 and BuffExpires(prowl_buff)\n    # REASON: Only suggest Regrowth out of stealth and if there's <15 seconds remaining\n    # MODIFICATION: Remove `or Spell(cat_form)`\n    # REASON: Blocks Prowl from showing up\n    unless Talent(bloodtalons_talent) and BuffRemaining(bloodtalons_buff) < 15 and BuffExpires(prowl_buff) and Spell(regrowth)\n    {\n        #prowl\n        Spell(prowl)\n    }\n}\n\nAddFunction FeralPrecombatShortCdPostConditions\n{\n    # MODIFICATION: Talent(bloodtalons_talent) to Talent(bloodtalons_talent) and BuffRemaining(bloodtalons_buff) < 15 and BuffExpires(prowl_buff)\n    # REASON: Only suggest Regrowth out of stealth and if there's <15 seconds remaining\n    # MODIFICATION: Remove `or Spell(cat_form)`\n    # REASON: Blocks Prowl from showing up\n    Talent(bloodtalons_talent) and BuffRemaining(bloodtalons_buff) < 15 and BuffExpires(prowl_buff) and Spell(regrowth)\n}\n\nAddFunction FeralPrecombatCdActions\n{\n}\n\nAddFunction FeralPrecombatCdPostConditions\n{\n    # MODIFICATION: Talent(bloodtalons_talent) to Talent(bloodtalons_talent) and BuffRemaining(bloodtalons_buff) < 15 and BuffExpires(prowl_buff)\n    # REASON: Only suggest Regrowth out of stealth and if there's <15 seconds remaining\n    # MODIFICATION: Remove `or Spell(cat_form)`\n    # REASON: Blocks Prowl from showing up\n    Talent(bloodtalons_talent) and BuffRemaining(bloodtalons_buff) < 15 and BuffExpires(prowl_buff) and Spell(regrowth)\n}\n\n### Feral icons.\n\nAddCheckBox(opt_druid_feral_aoe L(AOE) default specialization=feral)\n\nAddIcon checkbox=!opt_druid_feral_aoe enemies=1 help=shortcd specialization=feral\n{\n    if not InCombat() FeralPrecombatShortCdActions()\n    unless not InCombat() and FeralPrecombatShortCdPostConditions()\n    {\n        FeralDefaultShortCdActions()\n    }\n}\n\nAddIcon checkbox=opt_druid_feral_aoe help=shortcd specialization=feral\n{\n    if not InCombat() FeralPrecombatShortCdActions()\n    unless not InCombat() and FeralPrecombatShortCdPostConditions()\n    {\n        FeralDefaultShortCdActions()\n    }\n}\n\nAddIcon enemies=1 help=main specialization=feral\n{\n    if not InCombat() FeralPrecombatMainActions()\n    unless not InCombat() and FeralPrecombatMainPostConditions()\n    {\n        FeralDefaultMainActions()\n    }\n}\n\nAddIcon checkbox=opt_druid_feral_aoe help=aoe specialization=feral\n{\n    if not InCombat() FeralPrecombatMainActions()\n    unless not InCombat() and FeralPrecombatMainPostConditions()\n    {\n        FeralDefaultMainActions()\n    }\n}\n\nAddIcon checkbox=!opt_druid_feral_aoe enemies=1 help=cd specialization=feral\n{\n    if not InCombat() FeralPrecombatCdActions()\n    unless not InCombat() and FeralPrecombatCdPostConditions()\n    {\n        FeralDefaultCdActions()\n    }\n}\n\nAddIcon checkbox=opt_druid_feral_aoe help=cd specialization=feral\n{\n    if not InCombat() FeralPrecombatCdActions()\n    unless not InCombat() and FeralPrecombatCdPostConditions()\n    {\n        FeralDefaultCdActions()\n    }\n}\n\n### Required symbols\n# ailuro_pouncers\n# ashamanes_energy_buff\n# ashamanes_frenzy\n# augmentation\n# berserk_cat\n# berserk_cat_buff\n# bloodtalons_buff\n# bloodtalons_talent\n# brutal_slash\n# brutal_slash_talent\n# cat_form\n# cat_form_buff\n# chatoyant_signet\n# clearcasting_buff\n# convergence_of_fates\n# dash\n# draught_of_souls\n# elunes_guidance\n# elunes_guidance_buff\n# elunes_guidance_talent\n# ferocious_bite\n# fiery_red_maimers_buff\n# incarnation_king_of_the_jungle\n# incarnation_king_of_the_jungle_buff\n# incarnation_talent\n# jagged_wounds_talent\n# luffa_wrappings\n# maim\n# mangle\n# moonfire_cat\n# moonfire_cat_debuff\n# predatory_swiftness_buff\n# prowl\n# prowl_buff\n# rake\n# rake_debuff\n# regrowth\n# rip\n# rip_debuff\n# sabertooth_talent\n# savage_roar\n# savage_roar_buff\n# savage_roar_talent\n# scent_of_blood_buff\n# shadowmeld\n# shadowmeld_buff\n# shred\n# soul_of_the_forest_talent\n# swipe_cat\n# thrash_cat\n# thrash_cat_debuff\n# tigers_fury\n# tigers_fury_buff\n# wild_charge\n# wild_charge_bear\n# wild_charge_cat\n\n# Guardian Script\n# Greenjeans/Dhol deserves credit for most of the options added\n\nAddCheckBox(opt_interrupt L(interrupt) default specialization=guardian)\nAddCheckBox(opt_melee_range L(not_in_melee_range) specialization=guardian)\nAddCheckBox(opt_catweave \"Suggest CatWeaving rotation\" specialization=guardian)\nAddCheckBox(opt_incapacitate \"Suggest Roar on CD (Sephuz's)\" specialization=guardian)\n\nAddListItem(opt_rotation mit \"Max Mitigation rotation\" specialization=guardian)\nAddListItem(opt_rotation hyb \"Hybrid rotation\" specialization=guardian default)\nAddListItem(opt_rotation dps \"Max DPS rotation\" specialization=guardian)\nAddListItem(opt_rotation dpsm \"Max DPS rotation with Maul\" specialization=guardian)\n\nAddListItem(opt_frenzied_regeneration_aggressiveness frenzied_regeneration_1 \"FR: 1 (lower is more agressive)\" specialization=guardian)\nAddListItem(opt_frenzied_regeneration_aggressiveness frenzied_regeneration_2 \"FR: 2 (lower is more agressive)\" specialization=guardian)\nAddListItem(opt_frenzied_regeneration_aggressiveness frenzied_regeneration_3 \"FR: 3 (lower is more agressive)\" specialization=guardian)\nAddListItem(opt_frenzied_regeneration_aggressiveness frenzied_regeneration_4 \"FR: 4 (lower is more agressive)\" specialization=guardian)\nAddListItem(opt_frenzied_regeneration_aggressiveness frenzied_regeneration_5 \"FR: 5 (lower is more agressive)\" specialization=guardian default)\nAddListItem(opt_frenzied_regeneration_aggressiveness frenzied_regeneration_6 \"FR: 6 (lower is more agressive)\" specialization=guardian)\nAddListItem(opt_frenzied_regeneration_aggressiveness frenzied_regeneration_7 \"FR: 7 (lower is more agressive)\" specialization=guardian)\nAddListItem(opt_frenzied_regeneration_aggressiveness frenzied_regeneration_8 \"FR: 8 (lower is more agressive)\" specialization=guardian)\nAddListItem(opt_frenzied_regeneration_aggressiveness frenzied_regeneration_9 \"FR: 9 (lower is more agressive)\" specialization=guardian)\n\nAddFunction FrenziedRegenerationAgressiveness asvalue=1\n{\n    unless List(opt_frenzied_regeneration_aggressiveness frenzied_regeneration_5)\n    {\n        if List(opt_frenzied_regeneration_aggressiveness frenzied_regeneration_1) 0.1\n        if List(opt_frenzied_regeneration_aggressiveness frenzied_regeneration_2) 0.2\n        if List(opt_frenzied_regeneration_aggressiveness frenzied_regeneration_3) 0.3\n        if List(opt_frenzied_regeneration_aggressiveness frenzied_regeneration_4) 0.4\n        if List(opt_frenzied_regeneration_aggressiveness frenzied_regeneration_6) 0.6\n        if List(opt_frenzied_regeneration_aggressiveness frenzied_regeneration_7) 0.7\n        if List(opt_frenzied_regeneration_aggressiveness frenzied_regeneration_8) 0.8\n        if List(opt_frenzied_regeneration_aggressiveness frenzied_regeneration_9) 0.9\n    }\n    0.5\n    \n}\n\n\nAddFunction GuardianUseItemActions\n{\n    Item(Trinket0Slot usable=1)\n    Item(Trinket1Slot usable=1)\n}\n\nAddFunction GuardianGetInMeleeRange\n{\n    if CheckBoxOn(opt_melee_range) and Stance(druid_bear_form) and not target.InRange(mangle) or Stance(druid_cat_form) and not target.InRange(shred)\n    {\n        if target.InRange(wild_charge) Spell(wild_charge)\n        Texture(misc_arrowlup help=L(not_in_melee_range))\n    }\n}\n\nAddFunction GuardianInterruptActions\n{\n    if CheckBoxOn(opt_interrupt) and not target.IsFriend() and target.IsInterruptible()\n    {\n        if target.InRange(skull_bash) Spell(skull_bash)\n        if not target.Classification(worldboss)\n        {\n            if target.InRange(mighty_bash) Spell(mighty_bash)\n            Spell(typhoon)\n            if target.InRange(maim) Spell(maim)\n            Spell(war_stomp)\n        }\n    }\n}\n\n### actions.default\n\nAddFunction GuardianDefaultMainActions\n{\n    if Stance(druid_bear_form) \n    {\n        # Pulverize for the buff, drop pulverize at 6 targets if using dps/dpsm rotation\n        if BuffExpires(pulverize_buff) and target.DebuffGain(thrash_bear_debuff) <= BaseDuration(thrash_bear_debuff) and not { { List(opt_rotation dps) or List(opt_rotation dpsm) } and Enemies() >= 6 } Spell(pulverize) \n\n        # Pulverize regardless of the buff at less than 6 targets if using dps/dpsm rotation\n        if { List(opt_rotation dps) or List(opt_rotation dpsm) } and Enemies() < 6 and target.DebuffStacks(thrash_bear_debuff) >= 3 Spell(pulverize)\n\n        # If RnT, Thrash if there's less than 3 stacks or it's about to drop soon, or if not using mit rotation and there's 2 or more targets\n        if { Talent(rend_and_tear_talent) or not List(opt_rotation mit) }\n            and { target.DebuffStacks(thrash_bear_debuff) < 3 or target.DebuffRemaining(thrash_bear_debuff) < 4.5 or not List(opt_rotation mit) and Enemies() >= 2 } Spell(thrash_bear)\n\n        # Mangle if Gore is up\n        if BuffPresent(gory_fur_buff) and not { { List(opt_rotation dps) or List(opt_rotation dpsm) } and Enemies() >= 4 } Spell(mangle)\n\n        # Moonfire if GG is up, drop at 3 targets if using dps/dpsm rotation\n        if BuffPresent(galactic_guardian_buff) \n            and not { { List(opt_rotation dps) or List(opt_rotation dpsm) } and Enemies() >=3 } Spell(moonfire)\n\n        # Swipe if not using mit rotation and there's 4 or more targets\n        if Enemies() >= 4 and not List(opt_rotation mit) Spell(swipe_bear)\n\n        # Mangle, drop at 4 targets if using dps/dpsm rotation\n        if not { { List(opt_rotation dps) or List(opt_rotation dpsm) } and Enemies() >= 4 } Spell(mangle)\n\n        # Pulverize for the buff if it's dropping soon, drop pulverize at 6 targets if using dps/dpsm rotation\n        if BuffRemaining(pulverize_buff) < GCD() \n            and target.DebuffGain(thrash_bear_debuff) <= BaseDuration(thrash_bear_debuff) and not { { List(opt_rotation dps) or List(opt_rotation dpsm) } and Enemies() >= 6 } Spell(pulverize)\n\n        # Thrash\n        Spell(thrash_bear)\n\n        # Pulverize for the buff if it's going to drop and there's nothing better to do, drop pulverize at 6 targets if using dps/dpsm rotation\n        if BuffRemaining(pulverize_buff) < 3.6 \n            and target.DebuffGain(thrash_bear_debuff) <= BaseDuration(thrash_bear_debuff) and not { { List(opt_rotation dps) or List(opt_rotation dpsm) } and Enemies() >= 6 } Spell(pulverize) \n\n        # Moofire if it's not up\n        if target.DebuffExpires(moonfire_debuff) Spell(moonfire) \n    }\n    \n    if CheckBoxOn(opt_catweave) and not target.IsAggroed() and Talent(feral_affinity_talent) GuardianCatWeaveActions()\n    \n    if Stance(druid_bear_form) \n    {\n        # Swipe\n        Spell(swipe_bear)\n    }\n}\n\nAddFunction GuardianCatWeaveActions\n{\n    Spell(cat_form)\n    if ComboPoints() >= 1 and target.DebuffRemaining(rip_debuff) < BaseDuration(rip_debuff) * 0.3 - 1 and target.HealthPercent() < 25 Spell(ferocious_bite) \n    if ComboPoints() == 5 \n    {\n        if { Energy() > 50 or target.DebuffRemaining(rip_debuff) < BaseDuration(rip_debuff) * 0.3 } and target.HealthPercent() < 25 Spell(ferocious_bite) \n        if target.DebuffExpires(rip_debuff) or target.DebuffRemaining(rip_debuff) < BaseDuration(rip_debuff) * 0.3 + 5 Spell(rip)\n        if Energy() > 50 and target.DebuffRemaining(rip_debuff) > 15 Spell(ferocious_bite)\n    }\n    if target.DebuffExpires(rake_debuff) or target.DebuffRemaining(rake_debuff) < BaseDuration(rake_debuff) * 0.3 + 3 Spell(rake) \n    Spell(shred)\n    if Energy() < 30 and not target.DebuffExpires(rip_debuff) and not target.DebuffExpires(rake_debuff) Spell(bear_form)\n}\n\nAddFunction GuardianDefaultShortCdActions\n{\n    GuardianGetInMeleeRange()\n\n    # Ironfur if has aggro and there's been physical damage in the last 10 seconds and ironfur isn't up or rage is about to cap, and not using dpsm rotation\n    if target.IsAggroed() \n        and IncomingDamage(10 physical=1) \n        and { BuffExpires(ironfur_buff) or RageDeficit() < 25 } \n        and not List(opt_rotation dpsm) Spell(ironfur)\n\n    # Maul if not using mit rotation and not aggroed and about to cap on rage\n    if not target.IsAggroed() \n        and RageDeficit() < 25 \n        and not List(opt_rotation mit) Spell(maul)\n\n    # Maul if using dpsm rotation and about to cap on rage\n    if RageDeficit() < 25\n        and List(opt_rotation dpsm) Spell(maul)\n\n    # Suggest incapacitating roar on CD.  This is for Sephuz's buff, but the gear check HasEquippedItem(sephuzs_secret) wasn't working\n    if CheckBoxOn(opt_incapacitate) and HasEquippedItem(sephuzs_secret) Spell(incapacitating_roar)\n\n    # Frenzied regen, if it's not up, and....something.  Math.\n    if BuffExpires(frenzied_regeneration_buff)\n        and IncomingDamage(5) / MaxHealth() + { 100 - HealthPercent() } / 100 > FrenziedRegenerationAgressiveness() + { SpellMaxCharges(frenzied_regeneration) - Charges(frenzied_regeneration count=0) } * 0.20 Spell(frenzied_regeneration)\n\n    # Bristling fur, if ironfur is about to expire and you're low on rage.\n    if BuffRemaining(ironfur_buff) < 2 \n        and Rage() < 40 Spell(bristling_fur)\n}\n\nAddFunction GuardianDefaultCdActions\n{\n    #skull_bash\n    GuardianInterruptActions()\n    #blood_fury\n    Spell(blood_fury_apsp)\n    #berserking\n    Spell(berserking)\n    #arcane_torrent\n    Spell(arcane_torrent_energy)\n    #use_item,slot=trinket2\n    GuardianUseItemActions()\n    Spell(incarnation_guardian_of_ursoc)\n    Spell(rage_of_the_sleeper)\n    Spell(barkskin)\n    Spell(survival_instincts)\n\n   # unless { BuffExpires(ironfur_buff) or RageDeficit() < 25 } and Spell(ironfur) \n   #    or BuffExpires(frenzied_regeneration_buff) and IncomingDamage(6) / MaxHealth() > 0.25 + { 2 - Charges(frenzied_regeneration count=0) } * 0.15 and Spell(frenzied_regeneration) \n   #    or BuffExpires(pulverize_buff) and target.DebuffGain(thrash_bear_debuff) <= BaseDuration(thrash_bear_debuff) and Spell(pulverize) \n   #    or target.DebuffRemaining(thrash_bear_debuff) < 4.5 and Spell(thrash_bear) \n   #    or Spell(mangle) \n   #    or BuffRemaining(pulverize_buff) < GCD() and target.DebuffGain(thrash_bear_debuff) <= BaseDuration(thrash_bear_debuff) and Spell(pulverize)\n   # {\n   #     #incarnation\n   #     Spell(incarnation_guardian_of_ursoc)\n   # }\n}\n\n### actions.precombat\n\nAddFunction GuardianPrecombatMainActions\n{\n    #flask,type=flask_of_the_seventh_demon\n    #food,type=azshari_salad\n    #bear_form\n    Spell(bear_form)\n}\n\nAddFunction GuardianPrecombatShortCdPostConditions\n{\n    Spell(bear_form)\n}\n\nAddFunction GuardianPrecombatCdPostConditions\n{\n    Spell(bear_form)\n}\n\n### Guardian icons.\n\nAddCheckBox(opt_druid_guardian_aoe L(AOE) default specialization=guardian)\n\nAddIcon checkbox=!opt_druid_guardian_aoe enemies=1 help=shortcd specialization=guardian\n{\n    unless not InCombat() and GuardianPrecombatShortCdPostConditions()\n    {\n        GuardianDefaultShortCdActions()\n    }\n}\n\nAddIcon checkbox=opt_druid_guardian_aoe help=shortcd specialization=guardian\n{\n    unless not InCombat() and GuardianPrecombatShortCdPostConditions()\n    {\n        GuardianDefaultShortCdActions()\n    }\n}\n\nAddIcon enemies=1 help=main specialization=guardian\n{\n    if not InCombat() GuardianPrecombatMainActions()\n    GuardianDefaultMainActions()\n}\n\nAddIcon checkbox=opt_druid_guardian_aoe help=aoe specialization=guardian\n{\n    if not InCombat() GuardianPrecombatMainActions()\n    GuardianDefaultMainActions()\n}\n\nAddIcon checkbox=!opt_druid_guardian_aoe enemies=1 help=cd specialization=guardian\n{\n    unless not InCombat() and GuardianPrecombatCdPostConditions()\n    {\n        GuardianDefaultCdActions()\n    }\n}\n\nAddIcon checkbox=opt_druid_guardian_aoe help=cd specialization=guardian\n{\n    unless not InCombat() and GuardianPrecombatCdPostConditions()\n    {\n        GuardianDefaultCdActions()\n    }\n}\n\n### Required symbols\n# arcane_torrent_energy\n# bear_form\n# berserking\n# blood_fury_apsp\n# bristling_fur\n# frenzied_regeneration\n# frenzied_regeneration_buff\n# galactic_guardian_buff\n# incarnation_guardian_of_ursoc\n# ironfur\n# ironfur_buff\n# thrash_bear_debuff\n# maim\n# mangle\n# mighty_bash\n# moonfire\n# moonfire_debuff\n# pulverize\n# pulverize_buff\n# shred\n# skull_bash\n# swipe_bear\n# thrash_bear\n# thrash_bear_debuff\n# typhoon\n# war_stomp\n# wild_charge\n",
			},
		},
	},
}
